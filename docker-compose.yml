version: "3.12.4"

services:    
  db:
    image: postgres
    restart: always
    volumes: 
      - postgres-vol:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: InLine
    ports:
      - 5432:5432
    networks:
      - inline_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    container_name: inline_app
    build:
      context: .
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    networks:
      - inline_net
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:8000"


  bot:
    container_name: bot_container
    build:
      context: .
      dockerfile: /bot/Dockerfile
    ports:
      - 8000:8088
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    networks:
      - inline_net
    command: sh -c "python run bot.py"


volumes:
  postgres-vol:


networks:
  inline_net:
    name: inline_net